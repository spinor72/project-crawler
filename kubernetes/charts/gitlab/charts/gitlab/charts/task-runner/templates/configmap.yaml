{{- if .Values.enabled -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "fullname" . }}
  labels:
{{ include "gitlab.standardLabels" . | indent 4 }}
data:
  database.yml.erb: |
    production:
      adapter: postgresql
      encoding: unicode
      database: {{ template "gitlab.psql.database" . }}
      pool: 10
      username: {{ template "gitlab.psql.username" . }}
      password: <%= File.read("/etc/gitlab/postgres/psql-password") %>
      host: {{ template "gitlab.psql.host" . }}
      port: {{ template "gitlab.psql.port" . }}
  resque.yml.erb: |
    production:
      # Redis (single instance)
      url: redis://:<%= File.read("/etc/gitlab/redis/password") %>@{{ template "gitlab.redis.host" . }}:{{ template "gitlab.redis.port" }}
  gitlab.yml.erb: |
    production: &base
      gitlab:
        host: {{ template "gitlab.gitlab.hostname" . }}
        https: {{ hasPrefix "https://" (include "gitlab.gitlab.url" .) }}
        trusted_proxies:
        {{- if .Values.trusted_proxies }}
{{ toYaml .Values.trusted_proxies | indent 10 }}
        {{- end }}
        time_zone: {{ .Values.global.time_zone | quote }}
        email_from: example@example.com
        email_display_name: GitLab
        email_reply_to: noreply@example.com
        email_subject_suffix: ''
        default_projects_features:
          issues: true
          merge_requests: true
          wiki: true
          snippets: true
          builds: true
          container_registry: true
      incoming_email:
        enabled: false
      artifacts:
        enabled: true
      lfs:
        enabled: {{ eq .Values.lfs.enabled true }}
        object_store:
          enabled: true
          {{- if .Values.minio.enabled }}
          remote_directory: {{ .Values.minio.bucket }}
          {{- else }}
          remote_directory: {{ .Values.lfs.bucket }}
          {{- end }}
          direct_upload: true
          background_upload: false
          proxy_download: {{ eq .Values.lfs.proxy_download true }}
          {{- if .Values.minio.enabled }}
          connection:
            provider: AWS
            region: us-east-1
            aws_access_key_id: "<%= File.read('/etc/gitlab/minio/accesskey') %>"
            aws_secret_access_key: "<%= File.read('/etc/gitlab/minio/secretkey') %>"
            host: {{ template "gitlab.minio.hostname" . }}
            endpoint: {{ template "gitlab.minio.endpoint" . }}
            path_style: true
          {{- else if .Values.lfs.connection}}
          connection:
{{ toYaml .Values.lfs.connection | indent 12}}
          {{- end }}
      pages:
        enabled: false
      gitaly:
        client_path: /home/git/gitaly/bin
        token: "<%= File.read('/etc/gitlab/gitaly/gitaly_token') %>"
      repositories:
        storages: # You must have at least a `default` storage path.
          default:
            path: /var/opt/gitlab/repo
            gitaly_address: tcp://{{ template "gitlab.gitaly.host" . }}:{{ template "gitlab.gitaly.port" . }}
      backup:
        path: "tmp/backups"   # Relative paths are relative to Rails.root (default: tmp/backups/)
      gitlab_shell:
        path: /home/git/gitlab-shell/
        hooks_path: /home/git/gitlab-shell/hooks/
        secret_file: /etc/gitlab/shell/.gitlab_shell_secret
        upload_pack: true
        receive_pack: true
      workhorse:
      git:
        bin_path: /usr/bin/git
      webpack:
      monitoring:
        ip_whitelist:
          - 127.0.0.0/8
        sidekiq_exporter:
      extra:
        {{- if .Values.extra }}
{{ toYaml .Values.extra | indent 8 }}
        {{- end }}
      rack_attack:
        git_basic_auth:
          {{- if .Values.rack_attack.git_basic_auth.enabled }}
{{ toYaml .Values.rack_attack.git_basic_auth | indent 10 }}
          {{- end }}
      ## Registry Integration
      registry:
        enabled: true
        host: {{ template "gitlab.registry.host" . }}
        {{- if .Values.registry.port }}
        port: {{ .Values.registry.port }}
        {{- end }}
        api_url: {{ default "http" .Values.registry.api.protocol }}://{{ template "gitlab.registry.api.host" . }}:{{ default 5000 .Values.registry.api.port }}
        key: /etc/gitlab/registry/gitlab-registry.key
        issuer: {{ .Values.registry.tokenIssuer }}
  configure: |
    set -e
    mkdir -p /init-secrets/redis /init-secrets/shell /init-secrets/gitaly \
      /init-secrets/registry /init-secrets/postgres /init-secrets/rails-secrets
    cp /init-config/redis/password /init-secrets/redis/password
    cp /init-config/shell/.gitlab_shell_secret /init-secrets/shell/.gitlab_shell_secret
    cp /init-config/gitaly/gitaly_token /init-secrets/gitaly/gitaly_token
    cp /init-config/registry/gitlab-registry.key /init-secrets/registry/gitlab-registry.key
    cp /init-config/postgres/psql-password /init-secrets/postgres/psql-password
    cp /init-config/rails-secrets/secrets.yml /init-secrets/rails-secrets/secrets.yml
    if [ -e /init-config/minio ]; then
      mkdir /init-secrets/minio
      cp /init-config/minio/* /init-secrets/minio/
    fi

    cat << EOF > /init-secrets/.s3cfg
    [default]
    access_key = $(cat /init-secrets/minio/accesskey)
    secret_key = $(cat /init-secrets/minio/secretkey)
    bucket_location = us-east-1
    host_base = {{ template "gitlab.minio.hostname" . }}
    host_bucket = {{ template "gitlab.minio.hostname" . }}/%(bucket)
    default_mime_type = binary/octet-stream
    enable_multipart = True
    multipart_max_chunks = 10000
    recursive = True
    recv_chunk = 65536
    send_chunk = 65536
    server_side_encryption = False
    signature_v2 = True
    socket_timeout = 300
    use_mime_magic = True
    verbosity = WARNING
    website_endpoint = {{ template "gitlab.minio.url" . }}
    EOF
{{- end }}
